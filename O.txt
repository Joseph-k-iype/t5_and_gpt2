import os
import logging
import requests
from typing import Optional, Dict, Any

logger = logging.getLogger(__name__)

def get_azure_token_manual(tenant_id: str, client_id: str, client_secret: str, 
                          scope: str = "https://cognitiveservices.azure.com/.default") -> Optional[str]:
    """
    Manually get an Azure AD token using requests instead of the Azure SDK.
    This can help bypass certain proxy issues when the Azure SDK's authentication fails.
    
    Args:
        tenant_id: Azure tenant ID
        client_id: Azure client ID
        client_secret: Azure client secret
        scope: OAuth scope to request
        
    Returns:
        Access token if successful, None otherwise
    """
    try:
        # OAuth2 token endpoint
        token_url = f"https://login.microsoftonline.com/{tenant_id}/oauth2/v2.0/token"
        
        # Request body
        data = {
            "client_id": client_id,
            "client_secret": client_secret,
            "scope": scope,
            "grant_type": "client_credentials"
        }
        
        # Make the request
        response = requests.post(
            token_url, 
            data=data,
            timeout=30
        )
        
        # Handle response
        if response.status_code == 200:
            token_data = response.json()
            if "access_token" in token_data:
                logger.info("Successfully acquired Azure token manually")
                return token_data["access_token"]
            else:
                logger.error("Token response did not contain access_token")
                return None
        else:
            logger.error(f"Token request failed with status {response.status_code}: {response.text}")
            return None
            
    except Exception as e:
        logger.error(f"Error getting Azure token manually: {e}")
        return None
