class ValidationAgent:
    def __init__(self, llm):
        self.llm = llm
        self.parser = JsonOutputParser(pydantic_object=ValidatedClassification)
        self.prompt = ChatPromptTemplate.from_template(
            """**Validation Task**
Validate the following classification result based on the original data and classification provided.

Original Data:
{input_data}

Classification Result:
{classification_result}

Please output your answer as valid JSON with the following structure:
{
  "data": {
    "name": "<string>",
    "definition": "<string>"
  },
  "classification": {
    "classification": "<one of PUBLIC, INTERNAL, RESTRICTED, HIGHLY_RESTRICTED>",
    "confidence": <a number between 0 and 1>,
    "reason": "<a string with at least 10 characters>",
    "status": "<one of RED, AMBER, GREEN>"
  },
  "validation_notes": "<string>",
  "is_valid": <boolean>
}

{format_instructions}"""
        ).partial(format_instructions=self.parser.get_format_instructions())

    def validate(self, data: DataInput, result: ClassificationResult) -> ValidatedClassification:
        chain = self.prompt | self.llm | self.parser
        # Pass the original data and classification as JSON strings.
        validation = chain.invoke({
            "input_data": data.json(),
            "classification_result": result.json()
        })
        return ValidatedClassification(**validation)
