input_filename = "input_data.json"
    
    # Load the input JSON file with keys 'name' and 'definition'
    try:
        with open(input_filename, "r") as infile:
            input_data = json.load(infile)
        if "name" not in input_data or "definition" not in input_data:
            raise ValueError("Input JSON must contain 'name' and 'definition' keys.")
    except Exception as e:
        logger.error(f"Error reading input file: {e}")
        sys.exit(1)
    
    # Initialize the chatbot and classification workflow
    bot = AzureChatbot(CONFIG_PATH, CREDS_PATH, CERT_PATH)
    
    # Process classification
    result = bot.classify_data(input_data)
    
    # Save the result as a JSON file
    output_json_file = "isr_results.json"
    try:
        with open(output_json_file, "w") as outfile:
            json.dump(result, outfile, indent=2)
        logger.info(f"Classification results saved to {output_json_file}")
    except Exception as e:
        logger.error(f"Error saving JSON result: {e}")
    
    # Convert the JSON result to CSV using pandas
    try:
        # Use json_normalize in case the result is nested
        df = pd.json_normalize(result)
        output_csv_file = "isr_results.csv"
        df.to_csv(output_csv_file, index=False)
        logger.info(f"Classification results converted and saved to {output_csv_file}")
    except Exception as e:
        logger.error(f"Error converting result to CSV: {e}")
