import React from 'react';
import { NodeProps, Handle, Position } from '@xyflow/react';
import type { DetailNodeData } from '../../types/node.types';

const DetailNode: React.FC<NodeProps<DetailNodeData>> = ({ data }) => {
  const typeStyles = {
    action: {
      container: 'bg-blue-50 border-blue-300 text-blue-900',
      header: 'bg-blue-100 text-blue-800',
      icon: '⚡',
      accent: 'bg-blue-500'
    },
    consequence: {
      container: 'bg-red-50 border-red-300 text-red-900',
      header: 'bg-red-100 text-red-800',
      icon: '⚠️',
      accent: 'bg-red-500'
    },
    general: {
      container: 'bg-gray-50 border-gray-300 text-gray-900',
      header: 'bg-gray-100 text-gray-800',
      icon: 'ℹ️',
      accent: 'bg-gray-500'
    }
  } as const;

  const style = typeStyles[data.type] || typeStyles.general;

  return (
    <div className={`
      relative p-4 rounded-xl border-2 shadow-lg min-w-[260px] max-w-[380px]
      transition-all duration-200 hover:shadow-xl
      ${style.container}
    `}>
      {/* Connection Handle */}
      <Handle
        type="target"
        position={Position.Top}
        className="w-3 h-3 bg-gray-400 border-2 border-white shadow-md"
      />
      
      {/* Header with icon */}
      <div className={`
        flex items-center gap-2 mb-3 px-3 py-2 rounded-lg
        ${style.header} border
      `}>
        <span className="text-base">{style.icon}</span>
        <h4 className="font-semibold text-sm">{data.label}</h4>
      </div>
      
      {/* Content */}
      <div className="text-xs leading-relaxed text-gray-700 space-y-2">
        {data.content.split('\n').map((line, index) => (
          <p key={index} className="text-justify">
            {line.trim()}
          </p>
        ))}
      </div>
      
      {/* Visual accent */}
      <div className={`
        absolute top-0 left-0 w-1 h-full rounded-l-xl
        ${style.accent}
      `} />
      
      {/* Type indicator */}
      <div className="absolute top-2 right-2">
        <div className={`
          w-2 h-2 rounded-full
          ${style.accent}
        `} />
      </div>
    </div>
  );
};

export default DetailNode;
