def merge_table_cells_ppt_clear_duplicates(table, col_indices):
    """
    Merge cells in specified table columns and ensure no repeated content in merged cells.

    Parameters:
    - table: The PowerPoint table object.
    - col_indices: List of column indices to check for merging.
    """
    row_count = len(table.rows)

    for col_idx in col_indices:
        merge_start = 1  # Start from the first data row (skip header row)
        for row_idx in range(2, row_count):  # Start from the second data row
            # Safeguard against NoneType issues
            try:
                current_cell = table.cell(row_idx, col_idx)
                previous_cell = table.cell(row_idx - 1, col_idx)

                # Ensure both cells are valid
                if current_cell is None or previous_cell is None:
                    continue

                # If current cell content is different from previous, merge previous group
                if current_cell.text != previous_cell.text:
                    # Merge the previous group of cells
                    if merge_start < row_idx - 1:
                        merged_cell = table.cell(merge_start, col_idx).merge(table.cell(row_idx - 1, col_idx))
                        merged_cell.text = previous_cell.text  # Keep the text in the first cell of the merged group

                    # Clear text from all subsequent merged cells
                    for clear_idx in range(merge_start + 1, row_idx):
                        table.cell(clear_idx, col_idx).text = ""

                    # Start a new merge group
                    merge_start = row_idx

            except AttributeError as e:
                print(f"Error accessing cell at row {row_idx}, column {col_idx}: {e}")
                continue

        # Handle the last group in the column
        try:
            if merge_start < row_count - 1:
                merged_cell = table.cell(merge_start, col_idx).merge(table.cell(row_count - 1, col_idx))
                merged_cell.text = table.cell(merge_start, col_idx).text
                for clear_idx in range(merge_start + 1, row_count):
                    table.cell(clear_idx, col_idx).text = ""
        except AttributeError as e:
            print(f"Error merging final group in column {col_idx}: {e}")
            continue
