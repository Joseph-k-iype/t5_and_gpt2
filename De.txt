FROM python:3.9-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    wget \
    curl \
    gcc \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create necessary directories
RUN mkdir -p /app/data/chroma_db /app/env /app/logs /app/static

# Create a Python requirements file
RUN echo "fastapi>=0.95.0,<0.96.0\n\
uvicorn>=0.22.0,<0.23.0\n\
pydantic>=2.0.0,<3.0.0\n\
psycopg2-binary>=2.9.5,<3.0.0\n\
python-dotenv>=1.0.0,<2.0.0\n\
langchain>=0.0.200\n\
langchain_core>=0.0.10\n\
langchain_openai>=0.0.2\n\
openai>=1.0.0,<2.0.0\n\
azure-identity>=1.12.0,<2.0.0\n\
azure-storage-blob>=12.14.0,<13.0.0\n\
chromadb>=0.4.0,<0.5.0\n\
numpy>=1.23.0,<2.0.0\n\
pandas>=1.5.0,<2.0.0\n\
chardet>=5.0.0,<6.0.0\n\
psutil>=5.9.0,<6.0.0\n\
requests>=2.28.0,<3.0.0\n\
tenacity>=8.2.0,<9.0.0\n\
langgraph>=0.0.10\n\
python-multipart>=0.0.6,<0.1.0\n\
jinja2>=3.1.2,<3.2.0" > /app/requirements.txt

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r /app/requirements.txt

# Copy application files
COPY . /app/

# Create default env files if they don't exist (will be overridden by volume mounts)
RUN touch /app/env/config.env /app/env/credentials.env

# Create a default health check script
RUN echo '#!/bin/bash\n\
curl -f http://localhost:8000/health || exit 1' > /app/healthcheck.sh && \
chmod +x /app/healthcheck.sh

# Create entrypoint script
RUN echo '#!/bin/bash\n\
# Start application with provided environment variables\n\
exec uvicorn app.main:app --host ${HOST:-0.0.0.0} --port ${PORT:-8000} --workers ${WORKERS:-1}' > /app/entrypoint.sh && \
chmod +x /app/entrypoint.sh

# Expose port
EXPOSE 8000

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 CMD ["./healthcheck.sh"]

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]
