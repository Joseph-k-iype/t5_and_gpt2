Detailed Data Quality Checks

Data quality is critical for ensuring accurate, consistent, and reliable information. ISO/IEC 11179-1:2023 provides a structured approach to maintaining data quality by emphasizing clear definitions, value domain constraints, and business context. Below is a detailed breakdown of data quality checks, combined with examples for practical implementation.

1. Structural Quality Checks

Structural quality checks ensure that the metadata and structure of data elements are well-defined, clear, and conform to naming and documentation standards.

Checks
	•	Object Class Naming:
	•	Ensure object classes represent distinct real-world entities and are named as singular nouns.
	•	Example:
	•	Good: customer, invoice.
	•	Poor: customers, invoices.
	•	Property Naming:
	•	Ensure property names clearly define the characteristic being described.
	•	Example:
	•	Good: birth date (specific and clear).
	•	Poor: date (too generic).
	•	Documentation Completeness:
	•	Verify that each data element includes:
	•	Object class definition.
	•	Property definition.
	•	Value domain specifications.
	•	Example:
	•	Complete: customer registration date includes all metadata.
	•	Incomplete: Missing constraints or value domain details.

2. Semantic Quality Checks

Semantic checks ensure the meaning of data elements is clear, consistent, and aligned with business terminology.

Checks
	•	Clarity and Ambiguity:
	•	Ensure data element names and definitions avoid ambiguity.
	•	Example:
	•	Good: product unit price (specific meaning).
	•	Poor: price (unclear whose price is referenced).
	•	Business Context Relevance:
	•	Validate that the data element aligns with the intended business process.
	•	Example:
	•	A data element customer credit limit must align with credit policies.
	•	Avoid Redundancy:
	•	Ensure no duplicate or redundant data elements.
	•	Example:
	•	Avoid customer birth date and client date of birth as separate elements.

3. Value Domain Quality Checks

Value domain checks ensure the data elements adhere to valid values, constraints, and formats.

Checks
	•	Enumerated Domains:
	•	Ensure all permissible values are listed and documented.
	•	Example:
	•	Good: Status codes: pending, confirmed, cancelled.
	•	Poor: Status: open, confirmed (missing values).
	•	Non-Enumerated Domains:
	•	Verify ranges, patterns, and units of measure.
	•	Example:
	•	Good: number decimal 2 places in USD for monetary values.
	•	Poor: number (no format or unit specified).
	•	Validation Rules:
	•	Verify business rules for valid data.
	•	Example:
	•	Good: Invoice Amount ≥ 0.
	•	Poor: No constraint on negative values.

4. Accuracy and Validity Checks

Accuracy and validity checks ensure data complies with real-world and business rules.

Checks
	•	Business Rule Validation:
	•	Ensure values comply with business logic.
	•	Example:
	•	Customer Age: Must be ≥ 18 years.
	•	Data Type Validation:
	•	Verify values match the specified data type.
	•	Example:
	•	Good: 123.45 (matches number type with 2 decimal places).
	•	Poor: 123.abc (violates numeric data type).
	•	Date Validity:
	•	Validate date relationships.
	•	Example:
	•	End Date must be after Start Date.

5. Completeness Quality Checks

Completeness checks ensure mandatory data elements and metadata are fully populated.

Checks
	•	Mandatory Fields:
	•	Verify that required fields are not null or empty.
	•	Example:
	•	Good: customer name is always filled.
	•	Poor: Missing customer ID in some rows.
	•	Metadata Completeness:
	•	Ensure every data element has a complete set of metadata.
	•	Example:
	•	Complete: Includes definitions for object class, property, and value domain.
	•	Incomplete: Missing constraints for the value domain.

6. Consistency Quality Checks

Consistency checks ensure data is consistent across systems and relationships.

Checks
	•	Cross-System Consistency:
	•	Verify data elements with the same name are used consistently across systems.
	•	Example:
	•	Customer ID must have the same definition in CRM and Billing systems.
	•	Cross-Field Consistency:
	•	Validate relationships between fields.
	•	Example:
	•	Invoice Total Amount = Sum of Line Item Amounts.
	•	Referential Integrity:
	•	Verify foreign key references.
	•	Example:
	•	Customer ID in the Orders table must exist in the Customer Master table.

7. Temporal Quality Checks

Temporal checks ensure data is valid over time and meets time-based rules.

Checks
	•	Date Validation:
	•	Ensure time-based data follows logical relationships.
	•	Example:
	•	Invoice Issue Date must not be in the future.
	•	Contract Expiry Date must be after the Contract Start Date.

8. Integration and Interoperability Checks

Integration checks ensure data elements are compatible across systems and adhere to standards for interoperability.

Checks
	•	Inter-System Compatibility:
	•	Verify the same data element works across integrated systems.
	•	Example:
	•	Payment Method Code: Ensure consistent values between ERP and Payment Gateway systems.
	•	Data Exchange Validation:
	•	Ensure exported data conforms to agreed standards (e.g., ISO 20022 for financial data).
	•	Example:
	•	Validate field lengths, formats, and types during file transfers.

9. Performance and Scalability Checks

These checks ensure data structures can handle volume and performance demands.

Checks
	•	Field Length Optimization:
	•	Avoid excessive lengths for text fields to optimize storage.
	•	Example:
	•	Set Customer Legal Name to a maximum of 100 characters.
	•	Indexing for Performance:
	•	Ensure key fields (e.g., Customer ID) are indexed for faster queries.
	•	Data Volume Scalability:
	•	Validate that the system can handle large datasets without performance degradation.

10. Audit and Change Management Checks

Audit checks ensure data changes are tracked and obsolete elements are managed.

Checks
	•	Version Control:
	•	Ensure data elements and value domains include versioning metadata.
	•	Example:
	•	Account Type Code v1.1 includes a new value: “Savings Plus.”
	•	Audit Trail:
	•	Track who changed a data element and when.
	•	Example:
	•	Record changes to customer credit limit with timestamps.
	•	Obsolete Data Management:
	•	Archive or remove unused data elements.
	•	Example:
	•	Deprecate Account Category if it is no longer relevant.

Examples of Comprehensive Data Quality Checks

Customer Domain
	1.	Data Element: customer birth date.
	•	Validation:
	•	Must not be in the future.
	•	Must correspond to an age ≥ 18 years.
	•	Completeness:
	•	Mandatory for all customers.
	2.	Data Element: customer credit rating.
	•	Validation:
	•	Valid values: AAA, AA, A, BBB, BB, B.
	•	Referential Integrity:
	•	Must match values in the Credit Rating Master List.

Financial Domain
	1.	Data Element: account balance.
	•	Validation:
	•	Must be ≥ 0.
	•	Format: number decimal 2 places in USD.
	•	Completeness:
	•	Mandatory for all accounts.
	2.	Data Element: transaction date.
	•	Validation:
	•	Must not be in the future.
	•	Must be within the account’s active period.

By rigorously applying these data quality checks, organizations can align with ISO/IEC 11179-1:2023 standards, ensuring high-quality data for reliable business processes and decisions.
