import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import { fileURLToPath, URL } from 'node:url'
import tailwindcss from 'tailwindcss'
import autoprefixer from 'autoprefixer'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [
    react({
      // React optimization for React Flow
      jsxImportSource: '@emotion/react',
      babel: {
        plugins: ['@emotion/babel-plugin'],
      },
    })
  ],
  
  // Path resolution
  resolve: {
    alias: {
      '@': fileURLToPath(new URL('./src', import.meta.url)),
      '@/components': fileURLToPath(new URL('./src/components', import.meta.url)),
      '@/hooks': fileURLToPath(new URL('./src/hooks', import.meta.url)),
      '@/utils': fileURLToPath(new URL('./src/utils', import.meta.url)),
      '@/types': fileURLToPath(new URL('./src/types', import.meta.url)),
      '@/styles': fileURLToPath(new URL('./src/styles', import.meta.url)),
    },
  },
  
  // Development server configuration
  server: {
    port: 5173,
    host: true,
    open: true,
    cors: true,
    proxy: {
      '/api': {
        target: 'http://localhost:5000',
        changeOrigin: true,
        secure: false,
        ws: true,
      },
      '/socket.io': {
        target: 'http://localhost:5000',
        changeOrigin: true,
        ws: true,
      },
    },
  },
  
  // Build configuration
  build: {
    target: 'esnext',
    outDir: 'dist',
    assetsDir: 'assets',
    sourcemap: true,
    minify: 'terser',
    rollupOptions: {
      output: {
        manualChunks: {
          vendor: ['react', 'react-dom'],
          animations: ['framer-motion'],
          websocket: ['socket.io-client'],
          utils: ['clsx', 'tailwind-merge'],
          reactflow: ['reactflow']
        },
      },
    },
    terserOptions: {
      compress: {
        drop_console: true,
        drop_debugger: true,
      },
    },
    chunkSizeWarningLimit: 1000,
  },
  
  // Environment variables
  define: {
    __APP_VERSION__: JSON.stringify(process.env.npm_package_version || '1.0.0'),
    __BUILD_TIME__: JSON.stringify(new Date().toISOString()),
    __REACT_FLOW_VERSION__: JSON.stringify('11.11.4'),
  },
  
  // CSS configuration with ES module PostCSS
  css: {
    postcss: {
      plugins: [
        tailwindcss(),
        autoprefixer(),
      ],
    },
    devSourcemap: true,
  },
  
  // Optimization
  optimizeDeps: {
    include: [
      'react',
      'react-dom',
      'framer-motion',
      'socket.io-client',
      'clsx',
      'tailwind-merge',
      'reactflow'
    ],
    exclude: ['@vite/client', '@vite/env'],
    // React Flow specific optimizations
    esbuildOptions: {
      target: 'esnext'
    }
  },
  
  // Preview server
  preview: {
    port: 4173,
    host: true,
    open: true,
  },
  
  // Environment configuration
  envPrefix: 'VITE_',
  envDir: '.',
  
  // Experimental features for better performance
  experimental: {
    // renderBuiltUrl(filename, { hostType }) {
    //   if (hostType === 'js') {
    //     return { js: `/${filename}` }
    //   } else {
    //     return { relative: true }
    //   }
    // }
  },
  
  // Worker configuration for React Flow
  worker: {
    format: 'es'
  }
})
