// Types for JSON Rules Engine format
export interface RuleCondition {
  fact: string;
  operator: string;
  value: any;
  path?: string;
}

export interface RuleEvent {
  type: string;
  params?: Record<string, any>;
}

export interface RuleData {
  rule_id: string;
  rule_text: string;
  applies_to_countries?: string[];
  adequacy_countries?: string[];
  priority?: number;
  conditions?: {
    all?: RuleCondition[];
    any?: RuleCondition[];
    not?: RuleCondition[];
  };
  event?: RuleEvent;
}

// Custom node data types
export interface RuleNodeData {
  rule_id: string;
  rule_text: string;
  applies_to_countries?: string[];
  adequacy_countries?: string[];
  priority?: number;
}

export interface ConditionNodeData extends RuleCondition {
  // Extends RuleCondition with any additional properties
}

export interface EventNodeData extends RuleEvent {
  // Extends RuleEvent with any additional properties
}

export interface LogicNodeData {
  logic: 'all' | 'any' | 'not';
}

// Filter types
export interface FilterState {
  searchTerm: string;
  selectedCountry: string;
  selectedPriority: string;
}

// Graph layout types
export type LayoutType = 'hierarchical' | 'force' | 'circular';

// Export all types
export type {
  RuleCondition,
  RuleEvent,
  RuleData,
  RuleNodeData,
  ConditionNodeData,
  EventNodeData,
  LogicNodeData,
  FilterState,
  LayoutType,
};
