prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix vis: <http://www.abc.com/vis>

construct {
    # Report Metric nodes
    ?rmid vis:type ?ReprtMetric;
        vis:group ?RSId;
        vis:metricID ?rm;
        vis:reportScheduleId ?RS;
        vis:reportId ?report;
        vis:label ?rmname .
    
    # BDE nodes
    ?bdeid vis:type ?bdeormetricType;
        vis:group ?group;
        vis:bdeid ?bdeid;
        vis:BdeKey ?bdeormetric;
        vis:collibraProcess ?collibraProcess;
        vis:arisProcessID ?arisProcess;
        vis:label ?Name;
        vis:bdeFlag ?bdeFlag;
        vis:appId ?App;
        vis:kpiStatus ?kpiStatus;
        vis:controlStatus ?controlStatus;
        vis:associatedIssue ?associatedIssue;
        vis:trustedStatus ?trustedStatusName .
    
    # Edges between nodes
    ?edgeIndexId rdf:type vis:ReportEdge;
        vis:report <http://collibra.com/report/abc123report>;
        vis:from ?from;
        vis:to ?to;
        vis:map ?map;
        vis:interface ?interface_from .
} where {
    {
        # BDE nodes pattern
        ?bdeid rdf:type vis:ReportNode;
            vis:label ?bdeormetricType;
            vis:report <http://collibra.com/report/abc123report>;
            vis:group ?group;
            vis:BdeKey ?bdeormetric;
            vis:collibraProcess ?collibraProcess;
            vis:arisProcessID ?arisProcess;
            vis:label ?Name;
            vis:bdeFlag ?bdeFlag .
        optional {
            ?bdeid vis:appId ?App .
        }
        optional {
            ?bdeid vis:kpiStatus ?kpiStatus .
        }
        optional {
            ?bdeid vis:controlStatus ?controlStatus .
        }
        optional {
            ?bdeid vis:associatedIssue ?associatedIssue .
        }
        optional {
            ?bdeid vis:trustedStatus ?trustedStatusName .
        }
    }
    union {
        # Report Metric nodes pattern
        ?rmid rdf:type vis:ReportNode;
            vis:type ?ReprtMetric;
            vis:report <http://collibra.com/report/abc123report>;
            vis:group ?RSId;
            vis:metricID ?rm;
            vis:reportScheduleId ?RS;
            vis:reportId ?report;
            vis:label ?rmname .
        ?RSId rdf:type vis:ReportGroup;
            vis:type vis:ReportSchedule;
            vis:label ?RSName;
            vis:report <http://collibra.com/report/abc123report>;
            vis:group ?reportId;
            vis:reportScheduleId ?RS .
    }
    union {
        # Edges pattern
        ?edgeIndexId rdf:type vis:ReportEdge;
            vis:report <http://collibra.com/report/abc123report>;
            vis:from ?from;
            vis:to ?to .
        optional {
            ?edgeIndexId vis:map ?map .
        }
        optional {
            ?edgeIndexId vis:interface ?interface_from .
        }
        ?to rdf:type ?toNodeType;
            vis:report <http://collibra.com/report/abc123report> .
        filter(?toNodeType = vis:ReportNode || ?toNodeType = vis:ReportMetric)
        ?from rdf:type vis:ReportNode;
            vis:report <http://collibra.com/report/abc123report> .
    }
}
