import json
import re

# Load the JSON data (adjust the file path as needed)
with open("input.json", "r") as f:
    data = json.load(f)

for entry in data:
    # Get the regex fragments and classification name
    regex_list = entry.get("classification_regex", [])
    classification_name = entry.get("classification_name", "")
    
    allowed_words = []
    
    # Extract words from each regex fragment (only keep words with 3 or more characters)
    for pattern in regex_list:
        extracted = re.findall(r'\w+', pattern)
        allowed_words.extend([w for w in extracted if len(w) >= 3])
    
    # Split the classification name by underscore and include words with 3+ characters
    name_words = [w for w in classification_name.split('_') if len(w) >= 3]
    allowed_words.extend(name_words)
    
    # Remove duplicates
    allowed_words = list(set(allowed_words))
    
    if allowed_words:
        # Escape each word to avoid regex metacharacter issues
        escaped_words = [re.escape(word) for word in allowed_words]
        # Combine the words with alternation
        alternation = "|".join(escaped_words)
        # Build a pattern that matches if the entire string (with no whitespace) is a concatenation
        # of one or more allowed words (in any order).
        combined_pattern = rf"(?i)^(?:{alternation})+$"
        entry["classification_regex"] = combined_pattern
    else:
        # Fallback pattern that never matches if no valid words are found
        entry["classification_regex"] = r"(?i)$^"

# Write the updated data back to a JSON file
with open("output.json", "w") as f:
    json.dump(data, f, indent=4)

print("Updated JSON written to output.json")
