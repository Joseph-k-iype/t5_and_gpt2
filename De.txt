prefix collibra: <http://collibra.com/>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>

construct {
  # All triples in the subgraph
  ?s ?p ?o .
  
  # All type assertions
  ?s a ?type .
  ?o a ?otype .
  
  # Include schema information if available
  ?type rdfs:label ?typeLabel .
  ?p rdfs:label ?propLabel .
} where {
  # Get all subjects that are connected to reports within 3 hops
  {
    # Reports themselves
    ?s a collibra:Report .
  } UNION {
    # 1-hop from reports
    ?report a collibra:Report .
    ?report ?p1 ?s .
    FILTER(isIRI(?s))
  } UNION {
    # 2-hop from reports  
    ?report a collibra:Report .
    ?report ?p1 ?hop1 .
    FILTER(isIRI(?hop1))
    ?hop1 ?p2 ?s .
    FILTER(isIRI(?s))
  } UNION {
    # 3-hop from reports
    ?report a collibra:Report .
    ?report ?p1 ?hop1 .
    FILTER(isIRI(?hop1))
    ?hop1 ?p2 ?hop2 .
    FILTER(isIRI(?hop2))
    ?hop2 ?p3 ?s .
    FILTER(isIRI(?s))
  }
  
  # For specific report, uncomment and replace with actual URI:
  # FILTER(?report = <http://your-domain.com/reports/specific-report-id>)
  
  # Get all triples for discovered subjects
  ?s ?p ?o .
  
  # Get type information
  OPTIONAL { ?s a ?type }
  OPTIONAL { 
    FILTER(isIRI(?o))
    ?o a ?otype 
  }
  
  # Get schema labels
  OPTIONAL { ?type rdfs:label ?typeLabel }
  OPTIONAL { ?p rdfs:label ?propLabel }
}
