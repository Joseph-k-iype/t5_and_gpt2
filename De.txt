import re
from pptx.util import Inches

# Updated populate_slide_6 function with integrated Intra-Process and Boundary BDE calculations
def populate_slide_6(slide, df):
    delete_existing_tables(slide)
    headers = ["Process", "Consumed or Produced", "Business", "Process Owner", "Total Metrics", "BDEs at Boundary Level", "Pass Through BDEs", "Intra Process BDEs"]
    table = create_table(slide, headers, num_rows=1 + 2 * df['Process'].nunique(), top_position=Inches(1))

    row_data = []
    for process in df['Process'].unique():
        process_data = df[df['Process'] == process]

        # Consumed calculations
        consumed_metrics = process_data['Consumed Metric'].loc[process_data['Consumed Metric'] != ''].nunique()

        # Intra-process and boundary BDEs for consumed
        intra_process_consumed_bdes = process_data[
            (process_data['Consumed BDE'] != '') &
            (process_data['Flow Type'].str.contains(r'.*\bto Intra process\b', case=False, na=False))
        ]['Consumed BDE'].nunique()
        
        boundary_consumed_bdes = process_data[
            (process_data['Consumed BDE'] != '') &
            (~process_data['Flow Type'].str.contains(r'.*\bto Intra process\b', case=False, na=False))
        ]['Consumed BDE'].nunique()

        row_data.append([
            process, 'Consumed', process_data['Business'].iloc[0] if 'Business' in process_data.columns else '',
            process_data['Process Owner'].iloc[0] if 'Process Owner' in process_data.columns else '',
            consumed_metrics, boundary_consumed_bdes, '', intra_process_consumed_bdes
        ])

        # Produced calculations
        produced_metrics = process_data['Produced Metric'].loc[process_data['Produced Metric'] != ''].nunique()

        # Intra-process and boundary BDEs for produced
        intra_process_produced_bdes = process_data[
            (process_data['Produced BDE'] != '') &
            (process_data['Flow Type'].str.contains(r'.*\bto Intra process\b', case=False, na=False))
        ]['Produced BDE'].nunique()
        
        boundary_produced_bdes = process_data[
            (process_data['Produced BDE'] != '') &
            (~process_data['Flow Type'].str.contains(r'.*\bto Intra process\b', case=False, na=False))
        ]['Produced BDE'].nunique()

        row_data.append([
            process, 'Produced', process_data['Business'].iloc[0] if 'Business' in process_data.columns else '',
            process_data['Process Owner'].iloc[0] if 'Process Owner' in process_data.columns else '',
            produced_metrics, boundary_produced_bdes, '', intra_process_produced_bdes
        ])

    populate_table(table, row_data)
