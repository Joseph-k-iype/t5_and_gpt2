import React, { useState } from 'react';
import { ReactFlowProvider } from '@xyflow/react';

import Header from './components/Header';
import RulesFlow from './components/RulesFlow';
import ErrorBoundary from './components/ErrorBoundary';
import { useRulesData } from './hooks/useRulesData';

import './styles/globals.css';

const App: React.FC = () => {
  const { analytics, loading, refetch } = useRulesData();
  const [layoutDirection, setLayoutDirection] = useState<'TB' | 'LR' | 'BT' | 'RL'>('TB');

  const handleLayoutChange = (direction: 'TB' | 'LR' | 'BT' | 'RL') => {
    setLayoutDirection(direction);
  };

  return (
    <ErrorBoundary>
      <div className="h-screen flex flex-col bg-gray-50">
        {/* Header */}
        <Header
          analytics={analytics}
          loading={loading}
          onRefresh={refetch}
          onLayoutChange={handleLayoutChange}
          currentLayout={layoutDirection}
        />

        {/* Main Content */}
        <div className="flex-1 overflow-hidden">
          <ReactFlowProvider>
            <RulesFlow 
              layoutDirection={layoutDirection}
              onLayoutChange={handleLayoutChange}
            />
          </ReactFlowProvider>
        </div>
      </div>
    </ErrorBoundary>
  );
};

export default App;
