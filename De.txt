// frontend/src/components/KnowledgeGraph/GraphEdge.jsx
import React from 'react';
import { 
  getBezierPath, 
  getEdgeCenter, 
  getMarkerEnd,
  EdgeLabelRenderer 
} from 'reactflow';

const GraphEdge = ({
  id,
  sourceX,
  sourceY,
  targetX,
  targetY,
  sourcePosition,
  targetPosition,
  style = {},
  data,
  markerEnd,
}) => {
  const [edgePath, labelX, labelY] = getBezierPath({
    sourceX,
    sourceY,
    sourcePosition,
    targetX,
    targetY,
    targetPosition,
  });

  const onEdgeClick = () => {
    console.log('Edge clicked:', id, data);
  };

  return (
    <>
      <path
        id={id}
        style={{
          ...style,
          strokeWidth: Math.max(1, (data?.weight || 0.5) * 4),
          stroke: data?.color || '#64748b',
          strokeOpacity: 0.8,
          fill: 'none',
        }}
        className="react-flow__edge-path"
        d={edgePath}
        markerEnd={markerEnd}
        onClick={onEdgeClick}
      />
      {data?.label && (
        <EdgeLabelRenderer>
          <div
            style={{
              position: 'absolute',
              transform: `translate(-50%, -50%) translate(${labelX}px,${labelY}px)`,
              fontSize: 10,
              fontFamily: 'Inter, sans-serif',
              background: 'rgba(255, 255, 255, 0.9)',
              padding: '2px 6px',
              borderRadius: '4px',
              border: '1px solid #e5e7eb',
              boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',
              pointerEvents: 'all',
            }}
            className="nodrag nopan"
            onClick={onEdgeClick}
          >
            {data.label}
          </div>
        </EdgeLabelRenderer>
      )}
    </>
  );
};

export default GraphEdge;

// frontend/src/components/Layout/Sidebar.jsx
import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  Menu, 
  X, 
  Home, 
  MessageCircle, 
  Search, 
  History, 
  Settings, 
  User,
  FileText,
  Network,
  HelpCircle
} from 'lucide-react';

const Sidebar = ({ isOpen, onToggle, currentPage, onPageChange }) => {
  const [hoveredItem, setHoveredItem] = useState(null);

  const navigationItems = [
    {
      id: 'home',
      label: 'Home',
      icon: Home,
      description: 'Main dashboard'
    },
    {
      id: 'chat',
      label: 'Quick Chat',
      icon: MessageCircle,
      description: 'Fast AI responses'
    },
    {
      id: 'research',
      label: 'Deep Research',
      icon: Search,
      description: 'Multi-agent analysis'
    },
    {
      id: 'history',
      label: 'History',
      icon: History,
      description: 'Past conversations'
    },
    {
      id: 'knowledge',
      label: 'Knowledge Graphs',
      icon: Network,
      description: 'Concept visualization'
    },
    {
      id: 'documents',
      label: 'Documents',
      icon: FileText,
      description: 'Research reports'
    }
  ];

  const bottomItems = [
    {
      id: 'profile',
      label: 'Profile',
      icon: User,
      description: 'User settings'
    },
    {
      id: 'settings',
      label: 'Settings',
      icon: Settings,
      description: 'App preferences'
    },
    {
      id: 'help',
      label: 'Help',
      icon: HelpCircle,
      description: 'Support & docs'
    }
  ];

  const SidebarItem = ({ item, isActive, onClick }) => {
    const Icon = item.icon;
    
    return (
      <motion.button
        className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-left transition-all ${
          isActive
            ? 'bg-newyorker-black text-newyorker-cream'
            : 'text-newyorker-muted hover:text-newyorker-black hover:bg-newyorker-gray-50'
        }`}
        onClick={() => onClick(item.id)}
        onMouseEnter={() => setHoveredItem(item.id)}
        onMouseLeave={() => setHoveredItem(null)}
        whileHover={{ x: 4 }}
        whileTap={{ scale: 0.98 }}
      >
        <Icon className="w-5 h-5 flex-shrink-0" />
        <AnimatePresence>
          {isOpen && (
            <motion.div
              initial={{ opacity: 0, width: 0 }}
              animate={{ opacity: 1, width: 'auto' }}
              exit={{ opacity: 0, width: 0 }}
              className="flex-1 min-w-0"
            >
              <div className="font-medium text-sm">{item.label}</div>
              {hoveredItem === item.id && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                  className="text-xs opacity-75 mt-1"
                >
                  {item.description}
                </motion.div>
              )}
            </motion.div>
          )}
        </AnimatePresence>
      </motion.button>
    );
  };

  return (
    <>
      {/* Overlay for mobile */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden"
            onClick={onToggle}
          />
        )}
      </AnimatePresence>

      {/* Sidebar */}
      <motion.aside
        initial={{ x: -280 }}
        animate={{ x: isOpen ? 0 : -280 }}
        transition={{ duration: 0.3, ease: 'easeInOut' }}
        className="fixed left-0 top-0 bottom-0 w-72 bg-newyorker-paper border-r border-newyorker-gray-200 z-50 flex flex-col"
      >
        {/* Header */}
        <div className="flex items-center justify-between p-6 border-b border-newyorker-gray-200">
          <AnimatePresence>
            {isOpen && (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ opacity: 0 }}
              >
                <h2 className="text-lg font-display text-newyorker-black">
                  Deep Research
                </h2>
                <p className="text-xs text-newyorker-muted font-sans">
                  AI Assistant
                </p>
              </motion.div>
            )}
          </AnimatePresence>
          <button
            onClick={onToggle}
            className="p-2 text-newyorker-muted hover:text-newyorker-black transition-colors"
          >
            <X className="w-5 h-5" />
          </button>
        </div>

        {/* Navigation */}
        <nav className="flex-1 p-4 space-y-2">
          {navigationItems.map((item) => (
            <SidebarItem
              key={item.id}
              item={item}
              isActive={currentPage === item.id}
              onClick={onPageChange}
            />
          ))}
        </nav>

        {/* Bottom Navigation */}
        <div className="p-4 border-t border-newyorker-gray-200 space-y-2">
          {bottomItems.map((item) => (
            <SidebarItem
              key={item.id}
              item={item}
              isActive={currentPage === item.id}
              onClick={onPageChange}
            />
          ))}
        </div>

        {/* Footer */}
        <AnimatePresence>
          {isOpen && (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="p-4 border-t border-newyorker-gray-200"
            >
              <div className="text-xs text-newyorker-muted text-center">
                <p>Version 1.0.0</p>
                <p className="mt-1">Â© 2025 Deep Research</p>
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.aside>

      {/* Toggle Button (when sidebar is closed) */}
      <AnimatePresence>
        {!isOpen && (
          <motion.button
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            onClick={onToggle}
            className="fixed left-4 top-4 z-40 p-3 bg-newyorker-cream border border-newyorker-gray-200 rounded-lg shadow-lg hover:shadow-xl transition-all"
          >
            <Menu className="w-5 h-5 text-newyorker-black" />
          </motion.button>
        )}
      </AnimatePresence>
    </>
  );
};

export default Sidebar;
