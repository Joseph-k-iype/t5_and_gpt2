import json
import re

# Load the JSON data (adjust the file path as needed)
with open("input.json", "r") as f:
    data = json.load(f)

for entry in data:
    regex_list = entry.get("classification_regex", [])
    
    # Extract words from each regex fragment; we assume words are sequences of alphanumeric characters.
    # Only words with 3 or more characters are kept.
    words = []
    for pattern in regex_list:
        # re.findall returns all word tokens; you can adjust the regex if your definition of "word" differs.
        extracted = re.findall(r'\w+', pattern)
        words.extend([w for w in extracted if len(w) >= 3])
    
    # Remove duplicates
    unique_words = list(set(words))
    
    if unique_words:
        # Escape each word in case any has regex metacharacters
        escaped_words = list(map(re.escape, unique_words))
        # Join them with alternation
        alternation = "|".join(escaped_words)
        # Build a pattern that matches one or more of these words, optionally separated by whitespace.
        # This pattern will match if the text consists of any combination (in any order) of the extracted words.
        combined_pattern = rf"(?i)\b(?:{alternation})(?:\s+(?:{alternation}))*\b"
        entry["classification_regex"] = combined_pattern
    else:
        # In case no valid words were extracted, you could choose a pattern that never matches.
        entry["classification_regex"] = r"(?i)$^"

# Write the updated JSON back to a file
with open("output.json", "w") as f:
    json.dump(data, f, indent=4)

print("Updated JSON written to output.json")
