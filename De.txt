import os
import logging
from pathlib import Path
from fastapi import APIRouter, Request, HTTPException
from fastapi.responses import HTMLResponse
from fastapi.templating import Jinja2Templates

logger = logging.getLogger(__name__)
router = APIRouter(tags=["enhancement-ui"])

# Set up templates directory
templates_dir = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "templates")
os.makedirs(templates_dir, exist_ok=True)
templates = Jinja2Templates(directory=templates_dir)

# Create path for the enhancement UI template
ui_template_path = os.path.join(templates_dir, "enhancement_ui.html")

# Check if we need to create the template file
if not os.path.exists(ui_template_path):
    logger.info(f"Enhancement UI template not found at {ui_template_path}. Creating template file.")
    try:
        # Copy the template content from the static HTML file
        # This assumes you've saved the HTML in the templates directory as enhancement_ui.html
        # If not, you'll need to provide the content here
        with open(ui_template_path, 'w', encoding='utf-8') as f:
            # This is where the HTML content would be written
            pass
    except Exception as e:
        logger.error(f"Error creating enhancement UI template: {e}")

@router.get("/enhancement-ui", response_class=HTMLResponse)
async def get_enhancement_ui(request: Request):
    """
    Render the data element enhancement UI.
    
    Args:
        request: FastAPI request object
        
    Returns:
        HTML response with the enhancement UI
    """
    return templates.TemplateResponse("enhancement_ui.html", {"request": request})

@router.get("/validate", response_class=HTMLResponse)
async def get_validation_ui(request: Request):
    """
    Redirect to the enhancement UI for consistency.
    """
    return templates.TemplateResponse("enhancement_ui.html", {"request": request})
