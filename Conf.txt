# SPARQL Query to Extract Ontology from an RDF Graph

Here's a comprehensive SPARQL query that extracts the key ontological elements from an RDF graph:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

CONSTRUCT {
  # Classes
  ?class a rdfs:Class .
  ?class a owl:Class .
  ?class rdfs:label ?classLabel .
  ?class rdfs:comment ?classComment .
  
  # Class hierarchy
  ?class rdfs:subClassOf ?superClass .
  
  # Properties
  ?property a rdf:Property .
  ?property a owl:ObjectProperty .
  ?property a owl:DatatypeProperty .
  ?property rdfs:label ?propLabel .
  ?property rdfs:comment ?propComment .
  
  # Property characteristics
  ?property rdfs:domain ?domain .
  ?property rdfs:range ?range .
  ?property rdfs:subPropertyOf ?superProperty .
  ?property owl:inverseOf ?inverseProperty .
  
  # Property restrictions
  ?property owl:FunctionalProperty ?functional .
  ?property owl:InverseFunctionalProperty ?inverseFunctional .
  ?property owl:TransitiveProperty ?transitive .
  ?property owl:SymmetricProperty ?symmetric .
  
  # Ontology metadata
  ?ontology a owl:Ontology .
  ?ontology rdfs:label ?ontologyLabel .
  ?ontology rdfs:comment ?ontologyComment .
  ?ontology owl:imports ?importedOntology .
  ?ontology owl:versionInfo ?versionInfo .
}
WHERE {
  {
    # Get all defined classes
    { ?class a rdfs:Class . } UNION { ?class a owl:Class . }
    OPTIONAL { ?class rdfs:label ?classLabel . }
    OPTIONAL { ?class rdfs:comment ?classComment . }
  } UNION {
    # Get class hierarchy
    ?class rdfs:subClassOf ?superClass .
  } UNION {
    # Get all properties
    { ?property a rdf:Property . } UNION 
    { ?property a owl:ObjectProperty . } UNION 
    { ?property a owl:DatatypeProperty . }
    OPTIONAL { ?property rdfs:label ?propLabel . }
    OPTIONAL { ?property rdfs:comment ?propComment . }
  } UNION {
    # Get property characteristics
    { ?property rdfs:domain ?domain . } UNION
    { ?property rdfs:range ?range . } UNION
    { ?property rdfs:subPropertyOf ?superProperty . } UNION
    { ?property owl:inverseOf ?inverseProperty . }
  } UNION {
    # Get property restrictions
    { ?property a owl:FunctionalProperty . } UNION
    { ?property a owl:InverseFunctionalProperty . } UNION
    { ?property a owl:TransitiveProperty . } UNION
    { ?property a owl:SymmetricProperty . }
  } UNION {
    # Get ontology metadata
    ?ontology a owl:Ontology .
    OPTIONAL { ?ontology rdfs:label ?ontologyLabel . }
    OPTIONAL { ?ontology rdfs:comment ?ontologyComment . }
    OPTIONAL { ?ontology owl:imports ?importedOntology . }
    OPTIONAL { ?ontology owl:versionInfo ?versionInfo . }
  }
}
```

This query:

1. Uses `CONSTRUCT` to create a new graph containing only the ontological elements
2. Extracts classes (both RDFS and OWL)
3. Captures class hierarchies
4. Extracts properties (including object and datatype properties)
5. Captures property characteristics (domain, range, subproperty relationships)
6. Includes property restrictions (functional, inverse functional, etc.)
7. Extracts ontology metadata

You can run this query against your RDF graph to extract its ontological structure. If you need to focus on specific aspects or have a particularly large ontology, you might want to modify the query to extract only certain parts.​​​​​​​​​​​​​​​​
