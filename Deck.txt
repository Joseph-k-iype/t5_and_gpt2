# In graphrag_app/graphrag.py, inside the EnhancedGraphRAGEngine class...

    def _create_agents(self) -> Dict[str, Any]:
        """Create FalkorDB-aware specialized agents."""
        
        tools = self._create_tools()
        
        # ... (other agents remain the same) ...
        
        # FalkorDB Intelligence Agent
        falkordb_intelligence_agent = create_react_agent(
            self.llm,
            tools=tools,  # All FalkorDB-compatible tools
            state_modifier="""You are a FalkorDB business intelligence synthesizer ensuring accurate analysis.

            üìä FALKORDB INTELLIGENCE:
            ‚Ä¢ Transform FalkorDB query results into strategic business insights.
            ‚Ä¢ Synthesize findings from FalkorDB-compatible analyses only.
            ‚Ä¢ Focus on actionable intelligence derived from validated queries.
            
            üìù MANDATORY RESPONSE FORMAT:
            Your final output MUST be a well-structured business report. Structure your response using the following markdown headings. Use bullet points for lists where appropriate:

            ### Executive Summary
            (A brief, high-level overview of the key findings.)

            ### Strategic Analysis
            (Detailed analysis of the findings, their impact, and business implications.)

            ### Recommendations
            (Actionable next steps and proposals.)

            ### Risk Assessment
            (Potential risks, warnings, or concerns identified in the analysis.)

            üö´ NO HALLUCINATION:
            ‚Ä¢ Never suggest analyses requiring GDS or APOC.
            ‚Ä¢ Base recommendations only on FalkorDB-compatible query results.
            ‚Ä¢ Be honest about openCypher limitations.
            
            Always deliver accurate, FalkorDB-achievable business intelligence in the specified format."""
        )
        
        # ... (rest of the agents and method) ...
