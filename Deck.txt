for doc, chunk in tqdm(zip(state.documents, state.comprehensive_chunks), 
                             desc="Preparing docs", total=len(state.documents)):
            # FIX: Handle metadata access safely
            if hasattr(doc, 'metadata'):
                metadata = doc.metadata
            elif isinstance(doc, dict) and 'metadata' in doc:
                metadata = doc['metadata']
            else:
                metadata = {}
                
            if (chunk.embedding and 
                len(chunk.embedding) > 0 and 
                any(x != 0.0 for x in chunk.embedding)):
                
                # Add real embedding to document metadata
                metadata["embedding"] = chunk.embedding
                metadata["embedding_model"] = OPENAI_EMBEDDING_MODEL
                metadata["embedding_dimensions"] = len(chunk.embedding)
                
                # Update document metadata
                if hasattr(doc, 'metadata'):
                    doc.metadata = metadata
                elif isinstance(doc, dict):
                    doc['metadata'] = metadata
                    
                documents_with_embeddings.append(doc)
            else:
                skipped_count += 1
                logger.warning(f"Skipping document with invalid embedding: chunk {chunk.id}")
