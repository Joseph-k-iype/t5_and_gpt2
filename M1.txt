from pptx.oxml import parse_xml
from pptx.oxml.ns import nsdecls

def set_cell_border(cell, border_color="000000", border_width="12700"):
    """
    Sets border for a cell in a table.
    Parameters:
    - cell: The cell object.
    - border_color: Border color in hex format (e.g., '000000' for black).
    - border_width: Border width in EMUs (12700 is 1.5pt).
    """
    tc = cell._tc  # Get the cell's XML element
    tcPr = tc.get_or_add_tcPr()  # Get or create the table cell properties

    # Add XML for cell borders
    borders_xml = f"""
    <a:tcBorders xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main">
        <a:lnL w="{border_width}">
            <a:solidFill><a:srgbClr val="{border_color}"/></a:solidFill>
        </a:lnL>
        <a:lnR w="{border_width}">
            <a:solidFill><a:srgbClr val="{border_color}"/></a:solidFill>
        </a:lnR>
        <a:lnT w="{border_width}">
            <a:solidFill><a:srgbClr val="{border_color}"/></a:solidFill>
        </a:lnT>
        <a:lnB w="{border_width}">
            <a:solidFill><a:srgbClr val="{border_color}"/></a:solidFill>
        </a:lnB>
    </a:tcBorders>
    """
    # Append the borders XML to the table cell properties
    tcPr.append(parse_xml(borders_xml))
def populate_slide_6(slide, df):
    delete_existing_tables(slide)
    headers = ["Process", "Consumed or Produced", "Business", "Process Owner", "Total Metrics",
               "BDEs at Boundary Level", "Pass Through BDEs", "Pass Through Metrics"]
    table = create_table(slide, headers, num_rows=1 + 2 * df['Process'].nunique(), top_position=Inches(1))

    row_data = []
    for process in df['Process'].unique():
        process_data = df[df['Process'] == process]

        # Add rows for consumed and produced data
        row_data.append([process, 'Consumed', ...])  # Add consumed data here
        row_data.append([process, 'Produced', ...])  # Add produced data here

    populate_table(table, row_data)

    # Add thick borders after every 2 rows (1 consumed + 1 produced)
    for i in range(2, len(row_data) + 1, 2):  # Every 2 rows
        for cell in table.rows[i - 1].cells:
            set_cell_border(cell, border_color="000000", border_width="12700")


def populate_slide_8(slide, df, csv_data):
    delete_existing_tables(slide)
    headers = [
        "Process", "Consumed or Produced", "Total BDEs", "Total BDEs Agreed to Monitor", "% BDE Monitored",
        "BDEs at Boundary Level", "Boundary BDEs Agreed to Monitor", "% Boundary BDE Monitored",
        "Pass Through BDEs", "Pass Through BDEs Agreed to Monitor", "% Pass Through BDE Monitored",
        "Total Metrics", "Total Metrics Agreed to Monitor", "% Metrics Monitored",
        "Pass Through Metrics", "Pass Through Metrics Agreed to Monitor", "% Pass Through Metrics Monitored"
    ]
    table = create_table(slide, headers, num_rows=1 + 2 * df['Process'].nunique(), top_position=Inches(1))

    row_data = []
    for process in df['Process'].unique():
        process_data = df[df['Process'] == process]

        # Add rows for consumed and produced data
        row_data.append([process, 'Consumed', ...])  # Add consumed data here
        row_data.append([process, 'Produced', ...])  # Add produced data here

    populate_table(table, row_data)

    # Add thick borders after every 2 rows (1 consumed + 1 produced)
    for i in range(2, len(row_data) + 1, 2):  # Every 2 rows
        for cell in table.rows[i - 1].cells:
            set_cell_border(cell, border_color="000000", border_width="12700")
