def merge_process_cells(table, df):
    """
    Merge cells in the first column ("Process") for identical process names directly in the PowerPoint table.
    Parameters:
    - table: The PowerPoint table object.
    - df: The DataFrame used to populate the table.
    """
    # Track the starting row for the merge
    merge_start = 1  # First data row (row 0 is the header)
    process_column = 0  # Column index for "Process"

    # Ensure the DataFrame has data
    if df.empty:
        print("DataFrame is empty; skipping merge.")
        return

    for row_idx in range(1, len(df)):  # Start from the second row
        # Check if the process name changes or we are at the last row
        if row_idx == len(df) - 1 or df.iloc[row_idx, process_column] != df.iloc[row_idx - 1, process_column]:
            # Merge cells for the group
            try:
                table.cell(merge_start, process_column).merge(table.cell(row_idx - 1, process_column))
            except IndexError as e:
                print(f"Error merging rows {merge_start} to {row_idx - 1}: {e}")
            # Update merge_start to the current row
            merge_start = row_idx

    # Handle the last merge group (if not already merged)
    if merge_start < len(df):
        try:
            table.cell(merge_start, process_column).merge(table.cell(len(df) - 1, process_column))
        except IndexError as e:
            print(f"Error merging rows {merge_start} to {len(df) - 1}: {e}")
