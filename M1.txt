def merge_process_cells(table, df):
    """
    Merge cells in the first column ("Process") for identical process names.
    Parameters:
    - table: The PowerPoint table object.
    - df: The dataframe used to populate the table.
    """
    # Start tracking the first row of each merge group
    merge_start = 1  # First row with data (row 0 is the header)
    process_column = 0  # Column index for "Process"

    for row_idx in range(1, df.shape[0]):  # Start from the second row
        if df.iloc[row_idx, process_column] != df.iloc[row_idx - 1, process_column]:
            # Merge cells for the previous group
            if merge_start < row_idx:
                table.cell(merge_start, process_column).merge(table.cell(row_idx - 1, process_column))
            merge_start = row_idx  # Update the start of the next group

    # Merge the last group
    if merge_start < df.shape[0]:
        table.cell(merge_start, process_column).merge(table.cell(df.shape[0], process_column))
def populate_slide_6(slide, df):
    """
    Populate Slide 6 with a formatted table and merge "Process" cells.
    """
    headers = ["Process", "Consumed or Produced", "Business", "Process Owner", "Total Metrics",
               "BDEs at Boundary Level", "Pass Through BDEs", "Pass Through Metrics"]
    table = create_table(slide, headers, rows=df.shape[0] + 1, cols=len(headers))
    populate_table(table, df)

    # Merge cells in the "Process" column
    merge_process_cells(table, df)

def populate_slide_8(slide, df):
    """
    Populate Slide 8 with a formatted table and merge "Process" cells.
    """
    headers = [
        "Process", "Consumed or Produced", "Total BDEs", "Total BDEs Agreed to Monitor", "% BDE Monitored",
        "BDEs at Boundary Level", "Boundary BDEs Agreed to Monitor", "% Boundary BDE Monitored",
        "Pass Through BDEs", "Pass Through BDEs Agreed to Monitor", "% Pass Through BDE Monitored",
        "Total Metrics", "Total Metrics Agreed to Monitor", "% Metrics Monitored",
        "Pass Through Metrics", "Pass Through Metrics Agreed to Monitor", "% Pass Through Metrics Monitored"
    ]
    table = create_table(slide, headers, rows=df.shape[0] + 1, cols=len(headers))
    populate_table(table, df)

    # Merge cells in the "Process" column
    merge_process_cells(table, df)
