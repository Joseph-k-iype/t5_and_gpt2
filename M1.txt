from pptx.oxml import parse_xml
from pptx.oxml.ns import nsdecls

def apply_full_border_to_table(table):
    """
    Apply full borders to all cells in a PowerPoint table.
    """
    for row in table.rows:
        for cell in row.cells:
            tc = cell._tc  # Get the underlying XML element for the cell
            tcPr = tc.get_or_add_tcPr()  # Get or add the <w:tcPr> element
            
            # Clear existing borders if they exist
            while len(tcPr) > 0:
                tcPr.remove(tcPr[0])

            # Define XML for borders
            border_xml = f"""
                <a:tcBorders {nsdecls('a')}>
                    <a:lnL w="12700"><a:solidFill><a:srgbClr val="000000"/></a:solidFill></a:lnL>
                    <a:lnR w="12700"><a:solidFill><a:srgbClr val="000000"/></a:solidFill></a:lnR>
                    <a:lnT w="12700"><a:solidFill><a:srgbClr val="000000"/></a:solidFill></a:lnT>
                    <a:lnB w="12700"><a:solidFill><a:srgbClr val="000000"/></a:solidFill></a:lnB>
                </a:tcBorders>
            """
            
            # Parse and append the border XML to the cell properties
            tcPr.append(parse_xml(border_xml))


def create_table(slide, headers, num_rows, top_position, slide_width):
    cols = len(headers)
    table = slide.shapes.add_table(num_rows, cols, Inches(0.5), top_position, slide_width - Inches(1), Inches(0.5)).table

    # Set header row with green background and white font, and apply font size 10 to headers
    for col_idx, header in enumerate(headers):
        cell = table.cell(0, col_idx)
        cell.text = header
        cell.fill.solid()
        cell.fill.fore_color.rgb = RGBColor(0x48, 0x8F, 0x29)
        for paragraph in cell.text_frame.paragraphs:
            for run in paragraph.runs:
                run.font.size = Pt(10)
                run.font.bold = True
                run.font.color.rgb = RGBColor(255, 255, 255)

    # Apply borders to all cells in the table
    apply_full_border_to_table(table)

    return table
