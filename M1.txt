def apply_full_border_to_table(table):
    """
    Apply full borders to all cells in a PowerPoint table.
    """
    for row in table.rows:
        for cell in row.cells:
            tc = cell._tc  # Get the XML element for the cell
            tcPr = tc.get_or_add_tcPr()  # Get or add the <a:tcPr> element

            # Add borders to the XML for the cell
            tcPr.append(parse_xml(f'''
                <a:lnL {nsdecls('a')} w="12700">
                    <a:solidFill><a:srgbClr val="000000"/></a:solidFill>
                </a:lnL>
                <a:lnR {nsdecls('a')} w="12700">
                    <a:solidFill><a:srgbClr val="000000"/></a:solidFill>
                </a:lnR>
                <a:lnT {nsdecls('a')} w="12700">
                    <a:solidFill><a:srgbClr val="000000"/></a:solidFill>
                </a:lnT>
                <a:lnB {nsdecls('a')} w="12700">
                    <a:solidFill><a:srgbClr val="000000"/></a:solidFill>
                </a:lnB>
            '''))

def create_table(slide, headers, num_rows, top_position, slide_width):
    cols = len(headers)
    table = slide.shapes.add_table(num_rows, cols, Inches(0.5), top_position, slide_width - Inches(1), Inches(0.5)).table

    # Set header row with green background and white font, and apply font size 10 to headers
    for col_idx, header in enumerate(headers):
        cell = table.cell(0, col_idx)
        cell.text = header
        cell.fill.solid()
        cell.fill.fore_color.rgb = RGBColor(0x48, 0x8F, 0x29)
        for paragraph in cell.text_frame.paragraphs:
            for run in paragraph.runs:
                run.font.size = Pt(10)
                run.font.bold = True
                run.font.color.rgb = RGBColor(255, 255, 255)

    # Apply borders to all cells in the table
    apply_full_border_to_table(table)

    return table
