from fastapi import FastAPI, Depends
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
import logging
from app.api.routes.enhancement import router as enhancement_router
from app.config.environment import get_os_env

# Set up logging
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s",
    handlers=[
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

def create_application() -> FastAPI:
    """Create the FastAPI application."""
    # Initialize environment
    env = get_os_env()
    
    # Create FastAPI app
    app = FastAPI(
        title="Data Element Enhancement API",
        description="API for enhancing data element names and descriptions based on ISO/IEC 11179 standards",
        version="1.0.0",
    )
    
    # Configure CORS
    app.add_middleware(
        CORSMiddleware,
        allow_origins=["*"],  # Restrict in production
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )
    
    # Include routers
    app.include_router(enhancement_router)
    
    @app.get("/health")
    async def health_check():
        """Health check endpoint."""
        return {"status": "healthy"}
    
    @app.get("/")
    async def root():
        """Root endpoint with basic information."""
        return {
            "application": "Data Element Enhancement API",
            "version": "1.0.0",
            "status": "running",
            "documentation": "/docs"
        }
    
    return app

app = create_application()

if __name__ == "__main__":
    # For local development
    uvicorn.run("main:app", host="0.0.0.0", port=8000, reload=True)
