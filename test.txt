import pandas as pd
import numpy as np

# Sample data
data1 = {'id': [1, 2, 3], 'name': ['abc', 'def', 'efg']}
data2 = {'id': [1, 1, 1], 'new_value': ['lll', 'bbb', 'aaa']}

# Create DataFrames
df1 = pd.DataFrame(data1)
df2 = pd.DataFrame(data2)

# Create a dictionary from df2 for fast lookups
id_to_names = {}
for id_value, new_value in zip(df2['id'], df2['new_value']):
    if id_value in id_to_names:
        id_to_names[id_value].append(new_value)
    else:
        id_to_names[id_value] = [new_value]

# Flatten the dictionary into lists for ids and new values
ids = []
new_values = []
for id_value, names in id_to_names.items():
    ids.extend([id_value] * len(names))
    new_values.extend(names)

# Create a DataFrame from the flattened lists
exploded_df2 = pd.DataFrame({'id': ids, 'name': new_values})

# Prepare the result DataFrame
result_rows = []

# Iterate through df1 and construct the result rows
for idx in range(len(df1)):
    id_value = df1.at[idx, 'id']
    if id_value in id_to_names:
        for new_name in id_to_names[id_value]:
            result_rows.append({'id': id_value, 'name': new_name})
    else:
        result_rows.append({'id': id_value, 'name': df1.at[idx, 'name']})

# Convert the result rows to a DataFrame
result_df = pd.DataFrame(result_rows)

# Display the result
print(result_df)



