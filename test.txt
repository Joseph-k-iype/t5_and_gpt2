import pandas as pd

# Create a sample DataFrame with string values
data = {
    'process': ['A', 'A', 'B', 'B', 'C', 'C'],
    'gcon': ['1', '1', '2', '2', '3', '3'],
    'gle': ['1', '0', '2', '2', '3', '3'],
    'glob': ['1', '1', '2', '1', '3', '3'],
    'pcdm': ['1', '1', '2', '2', '3', '0'],
    'ocdm': ['1', '1', '0', '2', '3', '3'],
    'ocon': ['1', '0', '2', '2', '3', '3'],
    'ole': ['1', '1', '2', '2', '3', '3'],
    'olob': ['1', '1', '2', '2', '0', '3']
}

df = pd.DataFrame(data)

# Define pairs for comparison
comparison_pairs = [('gcon', 'ocon'), ('gle', 'ole'), ('glob', 'olob'), ('pcdm', 'ocdm')]

def calculate_correctness(df, comparison_pairs):
    results = {}
    overall_correctness_list = []

    # Calculate correctness for each process
    for process in df['process'].unique():
        process_df = df[df['process'] == process].copy()
        
        # Create a correctness column for each pair
        for pair in comparison_pairs:
            process_df[f'{pair[0]}_{pair[1]}_correct'] = process_df.apply(lambda row: row[pair[0]] == row[pair[1]], axis=1)
        
        # Add a column that checks if all pairs are correct
        process_df['all_correct'] = process_df[[f'{pair[0]}_{pair[1]}_correct' for pair in comparison_pairs]].all(axis=1)
        
        # Calculate individual correctness for each pair
        individual_correctness = {}
        for pair in comparison_pairs:
            individual_correctness[f'{pair[0]}_{pair[1]}'] = process_df[f'{pair[0]}_{pair[1]}_correct'].mean() * 100
        
        # Calculate overall correctness for the process
        overall_correctness = process_df['all_correct'].mean() * 100
        overall_correctness_list.extend(process_df['all_correct'].tolist())
        
        # Extract examples
        fully_correct = process_df[process_df['all_correct'] == True]
        fully_wrong = process_df[process_df[[f'{pair[0]}_{pair[1]}_correct' for pair in comparison_pairs]].all(axis=1) == False]
        partially_correct = process_df[(process_df['all_correct'] == False) & (process_df[[f'{pair[0]}_{pair[1]}_correct' for pair in comparison_pairs]].any(axis=1))]
        
        results[process] = {
            'individual_correctness': individual_correctness,
            'overall_correctness': overall_correctness,
            'fully_correct': fully_correct,
            'partially_correct': partially_correct,
            'fully_wrong': fully_wrong
        }
    
    # Calculate overall correctness for the entire DataFrame
    overall_correctness_df = sum(overall_correctness_list) / len(overall_correctness_list) * 100
    
    return results, overall_correctness_df

results, overall_correctness_df = calculate_correctness(df, comparison_pairs)

# Prepare the master DataFrame to save the results
master_data = []

for process, result in results.items():
    record = {
        'process': process,
        **result['individual_correctness'],
        'overall_correctness': result['overall_correctness']
    }
    master_data.append(record)

# Add the overall correctness for the entire DataFrame
master_data.append({
    'process': 'Overall',
    **{pair[0] + '_' + pair[1]: None for pair in comparison_pairs},
    'overall_correctness': overall_correctness_df
})

master_df = pd.DataFrame(master_data)

# Save the master DataFrame to CSV
master_df.to_csv('master_correctness_results.csv', index=False)

# Also save fully correct, partially correct, and fully wrong cases to CSVs
fully_correct_df = pd.concat([result['fully_correct'] for result in results.values()], ignore_index=True)
partially_correct_df = pd.concat([result['partially_correct'] for result in results.values()], ignore_index=True)
fully_wrong_df = pd.concat([result['fully_wrong'] for result in results.values()], ignore_index=True)

fully_correct_df.to_csv('fully_correct_cases.csv', index=False)
partially_correct_df.to_csv('partially_correct_cases.csv', index=False)
fully_wrong_df.to_csv('fully_wrong_cases.csv', index=False)

# Print results for verification
print("Master Correctness Results:")
print(master_df)

print("\nFully Correct Cases:")
print(fully_correct_df)

print("\nPartially Correct Cases:")
print(partially_correct_df)

print("\nFully Wrong Cases:")
print(fully_wrong_df)


